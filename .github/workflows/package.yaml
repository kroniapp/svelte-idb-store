name: Publish

on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
      - v[0-9]+\.[0-9]+\.[0-9]+-next\.[0-9]+

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Configure Git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --get user.name
          git config --get user.email

      - name: Setup checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          registry-url: "https://registry.npmjs.org"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node

      - name: Setup env
        run: |
          tag=$GITHUB_REF_NAME
          version=$(echo $tag | sed -r "s/^v(.*)$/\1/")
          prerelease=false

          if [[ $tag == *"-next"* ]]; then
            prerelease=true
          fi

          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          message=$(git tag -l --format='%(contents:subject)' ${GITHUB_REF#refs/tags/})

          if [[ $prerelease == "true" ]]; then
            npm_tag=next
          else
            npm_tag=latest
          fi

          echo "prerelease=$prerelease" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_ENV
          echo "message=$message" >> $GITHUB_ENV
          echo "npm_tag=$npm_tag" >> $GITHUB_ENV

          echo "Prerelease: $prerelease"
          echo "Version: $version"
          echo "Message: $message"
          echo "NPM tag: $npm_tag"

      - name: Install
        run: pnpm i

      - name: Build
        run: pnpm run build

      - name: Publish
        run: pnpm publish --tag ${{env.npm_tag}} --no-git-checks

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{env.version}}
          name: v${{env.version}}
          prerelease: ${{env.prerelease}}
          body: ${{env.message}}
